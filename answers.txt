1. What is responsible for defining the routes of the games resource?

The create router fucntion and then calling it in app.use('/api/games', gamesRouter)

2. What do you notice about the folder structure? Whats the client responsible for? Whats the server responsible for?

Client is front end, like the functionality of the site and what can be seen and how it works.  Server takes care of backend like creating routes and seeding database with the info needing to be displayed.

3. What are the the responsibilities of server.js?

It initialises the server, fetches the data from the database and calls the router to set the routes for each database needing to be displayed/have specific routes.

4. What are the responsibilities of the gamesRouter?

Creates routes for the games database based on the template routes made in createRouter.

5. What process does the the client (front-end) use to communicate with the server?

Express? 

6. What optional second argument does the fetch method take? And what is it used for in this application? Hint: See Using Fetch on the MDN docs.

When calling an API can call a method on it also ie GET POST etc depending on what you want to do with the data.

7. Which of the games API routes does the front-end application consume (i.e. make requests to)?

/GET, shows all the data and allows you to access individual by id or update/delete/creat new. However I dont really understand the question, so just making this up.

8.  What are we using the MongoDB Driver for?

To retrieve information from a database stored in mongodb, through promises or callbacks.